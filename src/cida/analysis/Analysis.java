/* This file was generated by SableCC (http://www.sablecc.org/). */

package cida.analysis;

import cida.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgramaPrograma(AProgramaPrograma node);
    void caseABlocoBloco(ABlocoBloco node);
    void caseADecAlterableDeclaracao(ADecAlterableDeclaracao node);
    void caseADecUnalterableDeclaracao(ADecUnalterableDeclaracao node);
    void caseANumberTipoBase(ANumberTipoBase node);
    void caseAAnswerTipoBase(AAnswerTipoBase node);
    void caseASymbolTipoBase(ASymbolTipoBase node);
    void caseATipoBaseTipo(ATipoBaseTipo node);
    void caseATipoVectorTipo(ATipoVectorTipo node);
    void caseAExpressaoColcheteVector(AExpressaoColcheteVector node);
    void caseAIdLocal(AIdLocal node);
    void caseADecLocalLocal(ADecLocalLocal node);
    void caseALocalVirgulaLocalVirgula(ALocalVirgulaLocalVirgula node);
    void caseAExpVirgulaExpVirgula(AExpVirgulaExpVirgula node);
    void caseAComandoLocalComando(AComandoLocalComando node);
    void caseACaptureComando(ACaptureComando node);
    void caseAShowComando(AShowComando node);
    void caseAInCaseThatComando(AInCaseThatComando node);
    void caseAAsLongAsComando(AAsLongAsComando node);
    void caseAConsideringComando(AConsideringComando node);
    void caseAComandoBlocoComando(AComandoBlocoComando node);
    void caseAExp1Exp0(AExp1Exp0 node);
    void caseAXorExp0(AXorExp0 node);
    void caseAExp2Exp1(AExp2Exp1 node);
    void caseAOrExp1(AOrExp1 node);
    void caseAAndExp1(AAndExp1 node);
    void caseAExp2Exp2(AExp2Exp2 node);
    void caseADiferenteExp2(ADiferenteExp2 node);
    void caseAComparacaoExp2(AComparacaoExp2 node);
    void caseAExp3Exp3(AExp3Exp3 node);
    void caseAMaiorIgualExp3(AMaiorIgualExp3 node);
    void caseAMenorIgualExp3(AMenorIgualExp3 node);
    void caseAExp5Exp4(AExp5Exp4 node);
    void caseAMaiorExp4(AMaiorExp4 node);
    void caseAMenorExp4(AMenorExp4 node);
    void caseAExp6Exp5(AExp6Exp5 node);
    void caseASubExp5(ASubExp5 node);
    void caseASomaExp5(ASomaExp5 node);
    void caseAExp7Exp6(AExp7Exp6 node);
    void caseAModExp6(AModExp6 node);
    void caseADivExp6(ADivExp6 node);
    void caseAMultExp6(AMultExp6 node);
    void caseAExp8Exp7(AExp8Exp7 node);
    void caseANotExp7(ANotExp7 node);
    void caseAMenosExp7(AMenosExp7 node);
    void caseASymbolExp8(ASymbolExp8 node);
    void caseANumberExp8(ANumberExp8 node);
    void caseAAnswerExp8(AAnswerExp8 node);
    void caseAVetorSymbolExp8(AVetorSymbolExp8 node);
    void caseALocalExp8(ALocalExp8 node);
    void caseAParenExp8(AParenExp8 node);

    void caseTAbreBloco(TAbreBloco node);
    void caseTFechaBloco(TFechaBloco node);
    void caseTParEsq(TParEsq node);
    void caseTParDir(TParDir node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTVirgula(TVirgula node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTPonto(TPonto node);
    void caseTAspas(TAspas node);
    void caseTColcheteEsq(TColcheteEsq node);
    void caseTColcheteDir(TColcheteDir node);
    void caseTNumeros(TNumeros node);
    void caseTSoma(TSoma node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTMenor(TMenor node);
    void caseTMaior(TMaior node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTComparacao(TComparacao node);
    void caseTDiferente(TDiferente node);
    void caseTIn(TIn node);
    void caseTCase(TCase node);
    void caseTOtherwise(TOtherwise node);
    void caseTThat(TThat node);
    void caseTConsidering(TConsidering node);
    void caseTFrom(TFrom node);
    void caseTTo(TTo node);
    void caseTBy(TBy node);
    void caseTAs(TAs node);
    void caseTLong(TLong node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTNot(TNot node);
    void caseTXor(TXor node);
    void caseTDo(TDo node);
    void caseTCode(TCode node);
    void caseTShow(TShow node);
    void caseTCapture(TCapture node);
    void caseTComentarioLinha(TComentarioLinha node);
    void caseTComentarioBloco(TComentarioBloco node);
    void caseTUnalterable(TUnalterable node);
    void caseTAlterable(TAlterable node);
    void caseTSymbol(TSymbol node);
    void caseTNumber(TNumber node);
    void caseTAnswer(TAnswer node);
    void caseTBooleano(TBooleano node);
    void caseTVector(TVector node);
    void caseTVetorSymbol(TVetorSymbol node);
    void caseTVetores(TVetores node);
    void caseTId(TId node);
    void caseTVazio(TVazio node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
